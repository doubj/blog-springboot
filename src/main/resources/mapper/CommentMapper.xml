<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.guojunjie.springbootblog.dao.CommentMapper">
    <resultMap id="BaseResultMap" type="com.guojunjie.springbootblog.entity.Comment">
        <id column="comment_id" jdbcType="INTEGER" property="commentId"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="nick_name" jdbcType="VARCHAR" property="nickName"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="reply_nick_name" jdbcType="VARCHAR" property="replyNickName"/>
        <result column="reply_admin" jdbcType="BOOLEAN" property="replyAdmin"/>
        <result column="be_replied_admin" jdbcType="BOOLEAN" property="beRepliedAdmin"/>
        <result column="blog_id" jdbcType="INTEGER" property="blogId"/>
        <result column="pid" jdbcType="INTEGER" property="pid"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="checked" jdbcType="BOOLEAN" property="checked" />
    </resultMap>
    <sql id="Base_Column_List">
    comment_id, content,nick_name,reply_nick_name,reply_admin,be_replied_admin,pid, create_time, checked, blog_id
  </sql>
    <insert id="addComment" useGeneratedKeys="true" keyProperty="commentId" keyColumn="comment_id"
            parameterType="com.guojunjie.springbootblog.entity.Comment">
        insert into tb_comment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="content != null">
                content,
            </if>
            <if test="nickName != null">
                nick_name,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="replyNickName != null">
                reply_nick_name,
            </if>
            <if test="replyAdmin != null">
                reply_admin,
            </if>
            <if test="beRepliedAdmin != null">
                be_replied_admin,
            </if>
            <if test="blogId != null">
                blog_id,
            </if>
            <if test="pid != null">
                pid,
            </if>
            <if test="checked != null">
                checked,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="content != null">
                #{content},
            </if>
            <if test="nickName != null">
                #{nickName},
            </if>
            <if test="email != null">
                #{email},
            </if>
            <if test="replyNickName != null">
                #{replyNickName},
            </if>
            <if test="replyAdmin != null">
                #{replyAdmin},
            </if>
            <if test="beRepliedAdmin != null">
                #{beRepliedAdmin},
            </if>
            <if test="blogId != null">
                #{blogId},
            </if>
            <if test="pid != null">
                #{pid},
            </if>
            <if test="checked != null">
                #{checked},
            </if>
        </trim>
  </insert>
    <update id="setCheckedByBlogIds" parameterType="Integer">
        update tb_comment
        set checked = true
        where comment_id in
        <foreach item="id" index="index" collection="ids"
                 open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
    <delete id="deleteCommentById" parameterType="Integer">
        delete from tb_comment
        where comment_id = #{id}
        or pid = #{id}
    </delete>
    <select id="getCommentsByQuery" resultMap="BaseResultMap" parameterType="com.guojunjie.springbootblog.service.dto.CommentQuery">
        <bind name="start" value="(page - 1) * limit"/>
        select
        <include refid="Base_Column_List"/>
        from
        tb_comment
        where
        pid = 0
        and blog_id = #{blogId}
        order by create_time desc
        limit #{start},#{limit}
    </select>
    <select id="getChildrenList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_comment
        where pid = #{commentId}
    </select>
    <select id="getNotBeRepliedAdmin" resultType="java.lang.Integer">
        select count(0)
        from tb_comment
        where reply_admin = 0
    </select>
    <select id="getBlogCommentCount" resultType="java.lang.Integer">
        select count(0)
        from tb_comment
        where blog_id = #{blogId}
        and pid = 0
    </select>

</mapper>