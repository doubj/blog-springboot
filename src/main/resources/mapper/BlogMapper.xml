<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.guojunjie.springbootblog.dao.BlogMapper">
    <resultMap id="BaseResultMap" type="com.guojunjie.springbootblog.entity.Blog">
        <id column="blog_id" jdbcType="INTEGER" property="blogId"/>
        <result column="blog_title" jdbcType="VARCHAR" property="blogTitle"/>
        <result column="blog_cover_image" jdbcType="VARCHAR" property="blogCoverImage"/>
        <result column="blog_category_id" jdbcType="INTEGER" property="blogCategoryId"/>
        <result column="blog_category_name" jdbcType="VARCHAR" property="blogCategoryName"/>
        <result column="blog_tags" jdbcType="VARCHAR" property="blogTags"/>
        <result column="blog_status" jdbcType="VARCHAR" property="blogStatus"/>
        <result column="blog_visits" jdbcType="BIGINT" property="blogVisits"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="blog_summary" jdbcType="VARCHAR" property="blogSummary"/>
        <result column="new_comment_count" jdbcType="INTEGER" property="newCommentCount"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.guojunjie.springbootblog.entity.Blog">
        <result column="blog_content" jdbcType="LONGVARCHAR" property="blogContent"/>
    </resultMap>
    <sql id="Base_Column_List">
    blog_id, blog_title, blog_cover_image, blog_category_id, blog_category_name, blog_tags, 
    blog_status, blog_visits, create_time, update_time, blog_summary, new_comment_count
  </sql>
    <sql id="Blob_Column_List">
    blog_content
  </sql>

    <select id="getBlogList" resultMap="BaseResultMap" parameterType="java.lang.Boolean">
        select
        <include refid="Base_Column_List"/>
        from tb_blog
        <if test="isPublished">
            where blog_status = 'published'
        </if>
    </select>

    <select id="getBlogCountByCategoryId" parameterType="map" resultType="int">
        select count(0)
        from tb_blog
        where blog_category_id = #{blogCategoryId}
    </select>

    <update id="setStatus" parameterType="map">
        update tb_blog
        set blog_status = #{status},update_time = NOW()
        where blog_id = #{blogId}
    </update>

    <select id="getTotalCount" resultType="java.lang.Integer">
    select count(0)
    from tb_blog
  </select>

    <select id="getPreviousBlog" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_blog
        where blog_id =
        (select blog_id from tb_blog where blog_id &lt; #{blogId}
        and blog_status = 'published'
        order by blog_id desc limit 1)
    </select>

    <select id="getNextBlog" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_blog
        where blog_id =
        (select blog_id from tb_blog where blog_id &gt; #{blogId}
        and blog_status = 'published'
        order by blog_id limit 1)
    </select>

    <select id="getTotalVisits" resultType="java.lang.Integer">
    select
    sum(blog_visits)
    from tb_blog
  </select>

    <select id="getBlogById" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from tb_blog
        where blog_id = #{blogId,jdbcType=INTEGER}
    </select>
    <delete id="deleteBlogById" parameterType="java.lang.Integer">
    delete from tb_blog
    where blog_id = #{blogId,jdbcType=INTEGER}
  </delete>
    <insert id="addBlog" useGeneratedKeys="true" keyProperty="blogId" keyColumn="blog_id"
            parameterType="com.guojunjie.springbootblog.entity.Blog">
        insert into tb_blog
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="blogId != null">
                blog_id,
            </if>
            <if test="blogTitle != null">
                blog_title,
            </if>
            <if test="blogCoverImage != null">
                blog_cover_image,
            </if>
            <if test="blogCategoryId != null">
                blog_category_id,
            </if>
            <if test="blogCategoryName != null">
                blog_category_name,
            </if>
            <if test="blogTags != null">
                blog_tags,
            </if>
            <if test="blogSummary != null">
                blog_summary,
            </if>
            <if test="blogStatus != null">
                blog_status,
            </if>
            <if test="blogContent != null">
                blog_content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="blogId != null">
                #{blogId,jdbcType=INTEGER},
            </if>
            <if test="blogTitle != null">
                #{blogTitle,jdbcType=VARCHAR},
            </if>
            <if test="blogCoverImage != null">
                #{blogCoverImage,jdbcType=VARCHAR},
            </if>
            <if test="blogCategoryId != null">
                #{blogCategoryId,jdbcType=INTEGER},
            </if>
            <if test="blogCategoryName != null">
                #{blogCategoryName,jdbcType=VARCHAR},
            </if>
            <if test="blogTags != null">
                #{blogTags,jdbcType=VARCHAR},
            </if>
            <if test="blogSummary != null">
                #{blogSummary,jdbcType=VARCHAR},
            </if>
            <if test="blogStatus != null">
                #{blogStatus,jdbcType=TINYINT},
            </if>
            <if test="blogContent != null">
                #{blogContent,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="addVisits">
        update tb_blog
        set `blog_visits` = #{visits}
        where blog_id = #{blogId}
    </update>
    <update id="updateBlog" parameterType="com.guojunjie.springbootblog.entity.Blog">
        update tb_blog
        <set>
            <if test="blogTitle != null">
                blog_title = #{blogTitle,jdbcType=VARCHAR},
            </if>
            <if test="blogCoverImage != null">
                blog_cover_image = #{blogCoverImage,jdbcType=VARCHAR},
            </if>
            <if test="blogCategoryId != null">
                blog_category_id = #{blogCategoryId,jdbcType=INTEGER},
            </if>
            <if test="blogCategoryName != null">
                blog_category_name = #{blogCategoryName,jdbcType=VARCHAR},
            </if>
            <if test="blogTags != null">
                blog_tags = #{blogTags,jdbcType=VARCHAR},
            </if>
            <if test="blogSummary != null">
                blog_summary = #{blogSummary,jdbcType=VARCHAR},
            </if>
            <if test="blogStatus != null">
                blog_status = #{blogStatus,jdbcType=TINYINT},
            </if>
            <if test="updateTime != null">
                update_time = NOW(),
            </if>
            <if test="blogContent != null">
                blog_content = #{blogContent,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where blog_id = #{blogId,jdbcType=INTEGER}
    </update>
    <update id="incrVisits">
        update tb_blog
        set blog_visits = blog_visits + #{incr}
        where blog_id = #{blogId}
    </update>
    <update id="incrNewCommentCount">
        update tb_blog
        set new_comment_count = new_comment_count + #{count}
        where blog_id = #{blogId}
    </update>
    <select id="getBlogByQueryAdmin" resultMap="BaseResultMap"
            parameterType="com.guojunjie.springbootblog.service.dto.BlogListQueryAdmin">
        <bind name="start" value="(page - 1) * limit"/>
        select
        <include refid="Base_Column_List"/>
        from tb_blog
        <where>
            <if test="title != null">
                <bind name="blogTitle" value="'%'+ title + '%'"/>
                and blog_title like #{blogTitle}
            </if>
            <if test="blogCategoryId != 0">
                and blog_category_id = #{blogCategoryId}
            </if>
            <choose>
                <when test="deleted">
                    and blog_status = 'deleted'
                </when>
                <otherwise>
                    and blog_status != 'deleted'
                </otherwise>
            </choose>
        </where>
        <if test="sort == '-id'">
            order by blog_id desc
        </if>
        limit #{start},#{limit}
    </select>
    <select id="getCountByQuery" resultType="java.lang.Integer">
        select count(0)
        from tb_blog
        <where>
            <if test="title != null">
                <bind name="blogTitle" value="'%'+ title + '%'"/>
                and blog_title like #{blogTitle}
            </if>
            <if test="blogCategoryId != 0">
                and blog_category_id = #{blogCategoryId}
            </if>
            <choose>
                <when test="deleted">
                    and blog_status = 'deleted'
                </when>
                <otherwise>
                    and blog_status != 'deleted'
                </otherwise>
            </choose>
        </where>
    </select>
    <select id="getBlogByQuery" resultMap="BaseResultMap">
        <bind name="start" value="(page - 1) * limit"/>
        select
        <include refid="Base_Column_List"/>
        from tb_blog
        where blog_status = 'published'
        <if test="blogCategoryName != null and blogCategoryName != ''">
            and blog_category_name = #{blogCategoryName}
        </if>
        <if test="blogTags != null and blogTags.length > 0">
            <foreach collection="blogTags" item="tagName">
                and locate(#{tagName}, blog_tags) > 0
            </foreach>
        </if>
        order by create_time desc
        limit #{start},#{limit}
    </select>
    <select id="getNeedDeletedBlogList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_blog
        where blog_status = 'deleted'
        and update_time &lt; #{expireTime}
    </select>
    <select id="getBlogCountBySixMonth" resultType="com.guojunjie.springbootblog.service.dto.BlogWithMonthDTO">
        SELECT MONTH(create_time) AS `month`,
        count(0) AS `count`
        FROM
        tb_blog
        WHERE
        create_time &gt;= #{startDate}
        AND create_time &lt;= NOW()
        GROUP BY
        MONTH (create_time)
        order by
        create_time
    </select>
    <select id="getCategoryAndCount" resultType="com.guojunjie.springbootblog.service.dto.BlogWithCategoryDTO">
        select blog_category_name as `categoryName`,count(0) as `blogCount`
        from
        tb_blog
        group by blog_category_name
    </select>
</mapper>